{"version":3,"file":"static/js/MoviesPage.8ddef542.chunk.js","mappings":"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","sources":["components/Eror/Eror.js","servies/serviesApi.js","servies/status.js","webpack://my-app/./src/components/MoviesPageForm/MoviesPageForm.module.css?d5ce","components/MoviesPageForm/MoviesPageForm.js","views/MoviesPage.js"],"sourcesContent":["export default function Eror({ value }) {\r\n  return <h2>{value}</h2>;\r\n}\r\n","const BASE_URL = \"https://api.themoviedb.org/3\";\r\nconst API_KEY = \"1938d617a50ef3d61b3b5089a743aea2\";\r\n\r\nasync function fetchWithErrorHandling(url = \"\") {\r\n  const response = await fetch(url);\r\n  return response.ok\r\n    ? await response.json()\r\n    : Promise.reject(new Error(\"Not found\"));\r\n}\r\n\r\nexport function fetchPopularFilm() {\r\n  return fetchWithErrorHandling(\r\n    `${BASE_URL}/trending/all/day?api_key=${API_KEY}`\r\n  );\r\n}\r\n\r\nexport function fetchMovies(name) {\r\n  return fetchWithErrorHandling(\r\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${name}`\r\n  );\r\n}\r\n\r\nexport function fetchFilmById(id) {\r\n  return fetchWithErrorHandling(\r\n    `${BASE_URL}/movie/${id}?api_key=${API_KEY}&language=en-US`\r\n  );\r\n}\r\nexport function fetchReviewsById(id) {\r\n  return fetchWithErrorHandling(\r\n    `${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\r\n  );\r\n}\r\nexport function fetchCreditsById(id) {\r\n  return fetchWithErrorHandling(\r\n    `${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\r\n  );\r\n}\r\n","const Status = {\r\n  IDLE: \"idle\",\r\n  PENDING: \"pending\",\r\n  RESOLVED: \"resolved\",\r\n  REJECTED: \"rejected\",\r\n};\r\n\r\nexport default Status;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"MoviesPageForm_form__7929c\",\"btn\":\"MoviesPageForm_btn__fyx9V\",\"input\":\"MoviesPageForm_input__FzAxb\"};","import { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport s from \"../MoviesPageForm/MoviesPageForm.module.css\";\r\n\r\nexport default function MoviesPageForm({ onSubmit }) {\r\n  const [seacrhQuery, setSeacrhQuery] = useState(\"\");\r\n\r\n  const handleNameChange = (event) => {\r\n    const value = event.currentTarget.value.toLowerCase();\r\n    setSeacrhQuery(value);\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    onSubmit(seacrhQuery);\r\n    setSeacrhQuery(\"\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form className={s.form} onSubmit={handleSubmit}>\r\n        <button type=\"submit\" className={s.btn}>\r\n          Submit\r\n        </button>\r\n\r\n        <input\r\n          className={s.input}\r\n          type=\"text\"\r\n          autoComplete=\"off\"\r\n          autoFocus\r\n          placeholder=\"Search images and photos\"\r\n          name=\"seacrhQuery\"\r\n          value={seacrhQuery}\r\n          onChange={handleNameChange}\r\n        />\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n\r\nMoviesPageForm.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n","import { useState, useEffect } from \"react\";\r\nimport * as serviesApi from \"../servies/serviesApi\";\r\nimport MoviesPageForm from \"../components/MoviesPageForm\";\r\nimport PopularFilmList from \"../components/PopularFilmList\";\r\n\r\nimport { useRouteMatch, useLocation, useHistory } from \"react-router-dom\";\r\nimport LoaderComponent from \"../components/LoaderComponent\";\r\nimport Status from \"../servies/status\";\r\nimport Eror from \"../components/Eror\";\r\n\r\nexport default function MoviesPage() {\r\n  const [status, setStatus] = useState(Status.IDLE);\r\n  const [query, setQuery] = useState(\"\");\r\n  const [filmList, setFilmList] = useState(null);\r\n  const [eror, setEror] = useState(null);\r\n  const { url } = useRouteMatch();\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n\r\n  const getQuery = (query) => {\r\n    setQuery(query);\r\n    history.push({ search: `query=${query}` });\r\n  };\r\n  useEffect(() => {\r\n    const newSearchQuery = new URLSearchParams(location.search).get(\"query\");\r\n\r\n    setQuery(newSearchQuery);\r\n  }, [location.search]);\r\n\r\n  useEffect(() => {\r\n    if (!query) return;\r\n    setStatus(Status.PENDING);\r\n    serviesApi\r\n      .fetchMovies(query)\r\n      .then((data) => {\r\n        setFilmList(data);\r\n        setStatus(Status.RESOLVED);\r\n      })\r\n      .catch((error) => {\r\n        setEror(error);\r\n        setStatus(Status.REJECTED);\r\n      });\r\n  }, [query]);\r\n\r\n  return (\r\n    <>\r\n      {status === \"idle\" && null}\r\n      {status === \"rejected\" && <Eror value={eror} />}\r\n\r\n      {status === \"pending\" && <LoaderComponent />}\r\n      <MoviesPageForm onSubmit={getQuery} />\r\n\r\n      {status === \"resolved\" && (\r\n        <PopularFilmList\r\n          filmList={filmList.results}\r\n          urlMoviesPage={url}\r\n          location={location}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n"],"names":["Eror","value","BASE_URL","API_KEY","fetchWithErrorHandling","url","fetch","response","ok","json","Promise","reject","Error","fetchPopularFilm","fetchMovies","name","fetchFilmById","id","fetchReviewsById","fetchCreditsById","IDLE","PENDING","RESOLVED","REJECTED","MoviesPageForm","onSubmit","useState","seacrhQuery","setSeacrhQuery","className","s","event","preventDefault","type","autoComplete","autoFocus","placeholder","onChange","currentTarget","toLowerCase","MoviesPage","Status","status","setStatus","query","setQuery","filmList","setFilmList","eror","setEror","useRouteMatch","location","useLocation","history","useHistory","useEffect","newSearchQuery","URLSearchParams","search","get","serviesApi","then","data","catch","error","LoaderComponent","push","PopularFilmList","results","urlMoviesPage"],"sourceRoot":""}