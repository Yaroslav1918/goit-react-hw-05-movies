{"version":3,"file":"static/js/HomePage.22fbbae0.chunk.js","mappings":"kJAAe,SAASA,EAAT,GAA0B,IAAVC,EAAS,EAATA,MAC7B,OAAO,wBAAKA,M,uLCDRC,EAAW,+BACXC,EAAU,mCAAhB,SAEeC,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,WAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,yGAAsCC,EAAtC,+BAA4C,GAA5C,SACyBC,MAAMD,GAD/B,YACQE,EADR,QAEkBC,GAFlB,iCAGYD,EAASE,OAHrB,gDAIMC,QAAQC,OAAO,IAAIC,MAAM,cAJ/B,2GAOO,SAASC,IACd,OAAOT,EAAuB,GAAD,OACxBF,EADwB,qCACaC,IAIrC,SAASW,EAAYC,GAC1B,OAAOX,EAAuB,GAAD,OACxBF,EADwB,iCACSC,EADT,4DACoEY,IAI5F,SAASC,EAAcC,GAC5B,OAAOb,EAAuB,GAAD,OACxBF,EADwB,kBACNe,EADM,oBACQd,EADR,oBAIxB,SAASe,EAAiBD,GAC/B,OAAOb,EAAuB,GAAD,OACxBF,EADwB,kBACNe,EADM,4BACgBd,EADhB,2BAIxB,SAASgB,EAAiBF,GAC/B,OAAOb,EAAuB,GAAD,OACxBF,EADwB,kBACNe,EADM,4BACgBd,EADhB,sB,mBC1B/B,IAPe,CACbiB,KAAM,OACNC,QAAS,UACTC,SAAU,WACVC,SAAU,a,qJCGG,SAASC,IACtB,OAAgCC,EAAAA,EAAAA,UAAS,MAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KACA,GAAwBF,EAAAA,EAAAA,UAAS,MAAjC,eAAOG,EAAP,KAAaC,EAAb,KACA,GAA4BJ,EAAAA,EAAAA,UAASK,EAAAA,EAAAA,MAArC,eAAOC,EAAP,KAAeC,EAAf,KAEMC,GAAWC,EAAAA,EAAAA,MAYjB,OAVAC,EAAAA,EAAAA,YAAU,WACRC,EAAAA,KAEGC,KAAKV,GACLW,OAAM,SAACC,GACNV,EAAQU,GACRP,EAAUF,EAAAA,EAAAA,eAEb,KAGD,gCACc,aAAXC,IAAyB,SAAC,IAAD,CAAM9B,MAAO2B,IACtCF,IACC,SAAC,IAAD,CAAiBA,SAAUA,EAASc,QAASP,SAAUA","sources":["components/Eror/Eror.js","servies/serviesApi.js","servies/status.js","views/HomePage.js"],"sourcesContent":["export default function Eror({ value }) {\r\n  return <h2>{value}</h2>;\r\n}\r\n","const BASE_URL = \"https://api.themoviedb.org/3\";\r\nconst API_KEY = \"1938d617a50ef3d61b3b5089a743aea2\";\r\n\r\nasync function fetchWithErrorHandling(url = \"\") {\r\n  const response = await fetch(url);\r\n  return response.ok\r\n    ? await response.json()\r\n    : Promise.reject(new Error(\"Not found\"));\r\n}\r\n\r\nexport function fetchPopularFilm() {\r\n  return fetchWithErrorHandling(\r\n    `${BASE_URL}/trending/all/day?api_key=${API_KEY}`\r\n  );\r\n}\r\n\r\nexport function fetchMovies(name) {\r\n  return fetchWithErrorHandling(\r\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${name}`\r\n  );\r\n}\r\n\r\nexport function fetchFilmById(id) {\r\n  return fetchWithErrorHandling(\r\n    `${BASE_URL}/movie/${id}?api_key=${API_KEY}&language=en-US`\r\n  );\r\n}\r\nexport function fetchReviewsById(id) {\r\n  return fetchWithErrorHandling(\r\n    `${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\r\n  );\r\n}\r\nexport function fetchCreditsById(id) {\r\n  return fetchWithErrorHandling(\r\n    `${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\r\n  );\r\n}\r\n","const Status = {\r\n  IDLE: \"idle\",\r\n  PENDING: \"pending\",\r\n  RESOLVED: \"resolved\",\r\n  REJECTED: \"rejected\",\r\n};\r\n\r\nexport default Status;\r\n","import PopularFilmList from \"../components/PopularFilmList\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport * as serviesApi from \"../servies/serviesApi\";\r\nimport Status from \"../servies/status\";\r\nimport Eror from \"../components/Eror\";\r\n\r\nexport default function HomePage() {\r\n  const [filmList, setFilmList] = useState(null);\r\n  const [eror, setEror] = useState(null);\r\n  const [status, setStatus] = useState(Status.IDLE);\r\n\r\n  const location = useLocation();\r\n\r\n  useEffect(() => {\r\n    serviesApi\r\n      .fetchPopularFilm()\r\n      .then(setFilmList)\r\n      .catch((error) => {\r\n        setEror(error);\r\n        setStatus(Status.REJECTED);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {status === \"rejected\" && <Eror value={eror} />}\r\n      {filmList && (\r\n        <PopularFilmList filmList={filmList.results} location={location} />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n"],"names":["Eror","value","BASE_URL","API_KEY","fetchWithErrorHandling","url","fetch","response","ok","json","Promise","reject","Error","fetchPopularFilm","fetchMovies","name","fetchFilmById","id","fetchReviewsById","fetchCreditsById","IDLE","PENDING","RESOLVED","REJECTED","HomePage","useState","filmList","setFilmList","eror","setEror","Status","status","setStatus","location","useLocation","useEffect","serviesApi","then","catch","error","results"],"sourceRoot":""}