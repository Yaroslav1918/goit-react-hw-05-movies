{"version":3,"file":"static/js/MoviesPage.1fc2c342.chunk.js","mappings":"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","sources":["components/PopularFilmList/PopularFilmList.js","servies/serviesApi.js","servies/status.js","components/MoviesAdditionalInfo/MoviesAdditionalInfo.js","components/Cast/Cast.js","components/NoFoundReviews/NoFoundReviews.js","components/Reviews/Reviews.js","webpack://my-app/./src/style/Button.module.css?c972","components/MoviesCard/MoviesCard.js","views/MovieDetailsPage.js","webpack://my-app/./src/components/MoviesPageForm/MoviesPageForm.module.css?d5ce","components/MoviesPageForm/MoviesPageForm.js","views/MoviesPage.js"],"sourcesContent":["import { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default function PopularFilmList({ filmList }) {\r\n  const urlMoviesPage = \"/movies\";\r\n\r\n  return (\r\n    <ul>\r\n      {filmList.map(({ id, title, name }) => (\r\n        <li key={id}>\r\n          <Link to={`${urlMoviesPage}/${id}`}>{title || name}</Link>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\nPopularFilmList.propTypes = {\r\n  filmList: PropTypes.array.isRequired,\r\n};\r\n","const BASE_URL = \"https://api.themoviedb.org/3\";\r\nconst API_KEY = \"1938d617a50ef3d61b3b5089a743aea2\";\r\n\r\nasync function fetchWithErrorHandling(url = \"\") {\r\n  const response = await fetch(url);\r\n  return response.ok\r\n    ? await response.json()\r\n    : Promise.reject(new Error(\"Not found\"));\r\n}\r\n\r\nexport function fetchPopularFilm() {\r\n  return fetchWithErrorHandling(\r\n    `${BASE_URL}/trending/all/day?api_key=${API_KEY}`\r\n  );\r\n}\r\n\r\nexport function fetchMovies(name) {\r\n  return fetchWithErrorHandling(\r\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${name}`\r\n  );\r\n}\r\n\r\nexport function fetchFilmById(id) {\r\n  return fetchWithErrorHandling(\r\n    `${BASE_URL}/movie/${id}?api_key=${API_KEY}&language=en-US`\r\n  );\r\n}\r\nexport function fetchReviewsById(id) {\r\n  return fetchWithErrorHandling(\r\n    `${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\r\n  );\r\n}\r\nexport function fetchCreditsById(id) {\r\n  return fetchWithErrorHandling(\r\n    `${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\r\n  );\r\n}\r\n","const Status = {\r\n  IDLE: \"idle\",\r\n  PENDING: \"pending\",\r\n  RESOLVED: \"resolved\",\r\n  REJECTED: \"rejected\",\r\n};\r\n\r\nexport default Status;\r\n","import { Link, useParams, Route } from \"react-router-dom\";\r\n\r\nexport default function MoviesAdditionalInfo() {\r\n  const { moviesId } = useParams();\r\n  return (\r\n    <>\r\n      <p>Additional information</p>\r\n      <ul>\r\n        <li>\r\n          <Link to={`/movies/${moviesId}/cast`}>Cast</Link>\r\n        </li>\r\n        <li>\r\n          <Link to={`/movies/${moviesId}/reviews`}>Reviews</Link>\r\n        </li>\r\n      </ul>\r\n    </>\r\n  );\r\n}\r\n","import { useParams } from \"react-router-dom\";\r\nimport { useState, useEffect } from \"react\";\r\nimport * as serviesApi from \"../../servies/serviesApi\";\r\nimport noFoundPhoto from \"../../image/no_image.jpg\";\r\n\r\nexport default function Cast() {\r\n  const [castStats, setCastStats] = useState(null);\r\n\r\n  const [error, setError] = useState(null);\r\n  const { moviesId } = useParams();\r\n\r\n  useEffect(() => {\r\n    if (!moviesId) return;\r\n\r\n    serviesApi.fetchCreditsById(moviesId).then(setCastStats).catch(setError);\r\n  }, [moviesId]);\r\n\r\n  return (\r\n    <>\r\n      <ul>\r\n        {castStats &&\r\n          castStats.cast.map(\r\n            ({ cast_id, profile_path, original_name, character }) => (\r\n              <li key={cast_id}>\r\n                <img\r\n                  src={\r\n                    profile_path\r\n                      ? `https://image.tmdb.org/t/p/w200/${profile_path}`\r\n                      : noFoundPhoto\r\n                  }\r\n                  alt={original_name}\r\n                />\r\n                <p>{original_name}</p>\r\n                <p>Character: {character}</p>\r\n              </li>\r\n            )\r\n          )}\r\n      </ul>\r\n    </>\r\n  );\r\n}\r\n","export default function NoFoundReviews() {\r\n  return <p>We don't have any reviews for this movies</p>;\r\n}\r\n","import { useParams } from \"react-router-dom\";\r\nimport { useEffect, useState } from \"react\";\r\nimport * as serviesApi from \"../../servies/serviesApi\";\r\nimport NoFoundReviews from \"../NoFoundReviews\";\r\nimport Status from \"../../servies/status\";\r\n\r\nexport default function Reviews() {\r\n  const [reviews, setReviews] = useState(null);\r\n  const [status, setStatus] = useState(Status.IDLE);\r\n\r\n  const [error, setError] = useState(null);\r\n  const { moviesId } = useParams();\r\n  useEffect(() => {\r\n    if (!moviesId) return;\r\n\r\n    serviesApi\r\n      .fetchReviewsById(moviesId)\r\n      .then((data) => {\r\n        if (data.results.length === 0) {\r\n          setStatus(Status.REJECTED);\r\n        }\r\n        setReviews(data);\r\n      })\r\n      .catch(setError);\r\n  }, [moviesId]);\r\n\r\n  return (\r\n    <>\r\n      <ul>\r\n        {reviews &&\r\n          reviews.results.map((item) => (\r\n            <li key={item.id}>\r\n              <p>{item.author}</p>\r\n              <p>{item.content}</p>\r\n            </li>\r\n          ))}\r\n      </ul>\r\n      {status === \"rejected\" && <NoFoundReviews />}\r\n    </>\r\n  );\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"btn\":\"Button_btn__v+Fb-\"};","import noFoundPhoto from \"../../image/no_image.jpg\";\r\nimport s from \"../../style//Button.module.css\";\r\nimport { FcHome } from \"react-icons/fc\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default function MoviesCard({ film, onClick }) {\r\n  return (\r\n    <>\r\n      <button type=\"button\" className={s.btn} onClick={() => onClick()}>\r\n        <FcHome /> <span> Go home</span>\r\n      </button>\r\n      <h3>{film.original_title}</h3>\r\n      <img\r\n        src={\r\n          film.poster_path\r\n            ? `https://image.tmdb.org/t/p/w200/${film.poster_path}`\r\n            : noFoundPhoto\r\n        }\r\n        alt={film.original_title}\r\n      />\r\n      <p> User score: {film.vote_average}</p>\r\n      <h4>Overview</h4>\r\n      <p>{film.overview}</p>\r\n      <h5>Genres</h5>\r\n      <ul>\r\n        {film.genres.length === 0 ? (\r\n          <li>\r\n            <p>Genres no found</p>\r\n          </li>\r\n        ) : (\r\n          film.genres.map((item) => <li key={item.id}>{item.name}</li>)\r\n        )}\r\n      </ul>\r\n    </>\r\n  );\r\n}\r\n\r\nMoviesCard.propTypes = {\r\n  film: PropTypes.object.isRequired,\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n","import { useEffect, useState } from \"react\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport * as serviesApi from \"../servies/serviesApi\";\r\nimport { useRouteMatch, Route } from \"react-router-dom\";\r\nimport Status from \"../servies/status\";\r\nimport LoaderComponent from \"../components/LoaderComponent\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport MoviesAdditionalInfo from \"../components/MoviesAdditionalInfo\";\r\nimport Cast from \"../components/Cast/Cast\";\r\nimport Reviews from \"../components/Reviews/Reviews\";\r\nimport MoviesCard from \"../components/MoviesCard\";\r\n\r\nexport default function MovieDetailsPage() {\r\n  const [film, setFilm] = useState(null);\r\n  const [status, setStatus] = useState(Status.IDLE);\r\n  const [eror, setEror] = useState(null);\r\n  const handleClick = () => {\r\n    history.push(\"/\");\r\n  };\r\n  const history = useHistory();\r\n  const { path } = useRouteMatch();\r\n  const { moviesId } = useParams();\r\n\r\n  useEffect(() => {\r\n    if (!moviesId) return;\r\n    setStatus(Status.PENDING);\r\n    serviesApi\r\n      .fetchFilmById(moviesId)\r\n      .then((data) => {\r\n        setFilm(data);\r\n        setStatus(Status.RESOLVED);\r\n      })\r\n      .catch((error) => {\r\n        setEror(error);\r\n        setStatus(Status.REJECTED);\r\n      });\r\n  }, [moviesId]);\r\n  return (\r\n    <>\r\n      {status === \"idle\" && null}\r\n\r\n      {status === \"pending\" && <LoaderComponent />}\r\n\r\n      {status === \"rejected\" && <h2>{eror}</h2>}\r\n      {status === \"resolved\" && (\r\n        <>\r\n          <MoviesCard film={film} onClick={handleClick} />\r\n          <MoviesAdditionalInfo />\r\n          <Route path={`${path}/cast`}>{moviesId && <Cast />}</Route>\r\n          <Route path={`${path}/reviews`}>{moviesId && <Reviews />}</Route>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"MoviesPageForm_form__7929c\",\"btn\":\"MoviesPageForm_btn__fyx9V\",\"input\":\"MoviesPageForm_input__FzAxb\"};","import { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport s from \"../MoviesPageForm/MoviesPageForm.module.css\";\r\n\r\nexport default function MoviesPageForm({ onSubmit }) {\r\n  const [seacrhQuery, setSeacrhQuery] = useState(\"\");\r\n\r\n  const handleNameChange = (event) => {\r\n    const value = event.currentTarget.value.toLowerCase();\r\n    setSeacrhQuery(value);\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    onSubmit(seacrhQuery);\r\n    setSeacrhQuery(\"\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form className={s.form} onSubmit={handleSubmit}>\r\n        <button type=\"submit\" className={s.btn}>\r\n          Submit\r\n        </button>\r\n\r\n        <input\r\n          className={s.input}\r\n          type=\"text\"\r\n          autoComplete=\"off\"\r\n          autoFocus\r\n          placeholder=\"Search images and photos\"\r\n          name=\"seacrhQuery\"\r\n          value={seacrhQuery}\r\n          onChange={handleNameChange}\r\n        />\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n\r\nMoviesPageForm.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n","import { useState, useEffect } from \"react\";\r\nimport * as serviesApi from \"../servies/serviesApi\";\r\nimport MoviesPageForm from \"../components/MoviesPageForm\";\r\nimport PopularFilmList from \"../components/PopularFilmList\";\r\nimport MovieDetailsPage from \"../views/MovieDetailsPage\";\r\nimport { useRouteMatch } from \"react-router-dom\";\r\nimport LoaderComponent from \"../components/LoaderComponent\";\r\nimport Status from \"../servies/status\";\r\n\r\nexport default function MoviesPage() {\r\n  const [status, setStatus] = useState(Status.IDLE);\r\n  const [query, setQuery] = useState(\"\");\r\n  const [filmList, setFilmList] = useState(null);\r\n  const [eror, setEror] = useState(null);\r\n  const { url } = useRouteMatch();\r\n\r\n  useEffect(() => {\r\n    if (!query) return;\r\n    setStatus(Status.PENDING);\r\n    serviesApi\r\n      .fetchMovies(query)\r\n      .then((data) => {\r\n        setFilmList(data);\r\n        setStatus(Status.RESOLVED);\r\n      })\r\n      .catch((error) => {\r\n        setEror(error);\r\n        setStatus(Status.REJECTED);\r\n      });\r\n  }, [query]);\r\n\r\n  return (\r\n    <>\r\n      {status === \"idle\" && null}\r\n      {status === \"rejected\" && <h2>{eror}</h2>}\r\n\r\n      {status === \"pending\" && <LoaderComponent />}\r\n      <MoviesPageForm onSubmit={setQuery} />\r\n      {status === \"resolved\" && (\r\n        <PopularFilmList filmList={filmList.results} urlMoviesPage={url} />\r\n      )}\r\n      <MovieDetailsPage />\r\n    </>\r\n  );\r\n}\r\n"],"names":["PopularFilmList","filmList","map","id","title","name","to","BASE_URL","API_KEY","fetchWithErrorHandling","url","fetch","response","ok","json","Promise","reject","Error","fetchPopularFilm","fetchMovies","fetchFilmById","fetchReviewsById","fetchCreditsById","IDLE","PENDING","RESOLVED","REJECTED","MoviesAdditionalInfo","moviesId","useParams","Cast","useState","castStats","setCastStats","setError","useEffect","serviesApi","then","catch","cast","cast_id","profile_path","original_name","character","src","noFoundPhoto","alt","NoFoundReviews","Reviews","reviews","setReviews","Status","status","setStatus","data","results","length","item","author","content","MoviesCard","film","onClick","type","className","s","original_title","poster_path","vote_average","overview","genres","MovieDetailsPage","setFilm","eror","setEror","history","useHistory","path","useRouteMatch","error","LoaderComponent","push","MoviesPageForm","onSubmit","seacrhQuery","setSeacrhQuery","event","preventDefault","autoComplete","autoFocus","placeholder","value","onChange","currentTarget","toLowerCase","MoviesPage","query","setQuery","setFilmList","urlMoviesPage"],"sourceRoot":""}